name: Closed Pull Requests

on:
  workflow_dispatch:
  schedule:
    - cron: "0 19 * * *" # JTS 04:00

jobs:
  build:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: # FIXME
          - ubuntu-latest
          - self-hosted
        flavor: # FIXME
          - dev
          - prod
        package: # FIXME
          - client_app

    runs-on: ${{ matrix.os }}

    steps:
      ### Setup ###
      - uses: actions/checkout@v3

      - name: Gradle Cache
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ matrix.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}-v1

      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1.5.0
        with:
          sdk: beta

      - name: Cache Pub Packages
        id: cache-pub-packages
        uses: actions/cache@v3.3.1
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-cache-${{ hashFiles('**/pubspec.lock') }}-v1

      - name: Cache Flutter
        id: cache-flutter
        uses: actions/cache@v3.3.1
        with:
          path: ~/fvm/versions
          key: ${{ runner.os }}-flutter-v1

      - name: Flutter Setup
        run: |
          dart pub global activate melos
          dart pub global activate fvm
          dart pub global activate flutterfire_cli 0.3.0-dev.16 --overwrite

      - if: steps.cache-flutter.outputs.cache-hit != 'true'
        run: |
          fvm install

      - if: steps.cache-flutter.outputs.cache-hit == 'true'
        run: |
          fvm flutter upgrade

      ### Decode ###
      - name: Decode signingConfigs.gradle
        if: matrix.os == 'ubuntu-latest'
        working-directory: packages/${{ matrix.package }}
        run: |
          echo ${{ secrets.SIGNING_CONFIGS_CLIENT_APP_BASE64 }} | base64 --decode > android/app/signingConfigs.gradle

      - name: Decode upload-keystore.jks
        if: matrix.os == 'ubuntu-latest'
        working-directory: packages/${{ matrix.package }}
        run: |
          echo ${{ secrets.UPLOAD_KEYSTORE_CLIENT_APP_BASE64 }} | base64 --decode > android/app/upload-keystore.jks

      ### Build ###
      - name: Build Android Dev
        if: matrix.os == 'ubuntu-latest' && matrix.flavor == 'dev'
        run: melos run build:apk:dev --no-select

      - name: Build Android Prod
        if: matrix.os == 'ubuntu-latest' && matrix.flavor == 'prod'
        run: melos run build:appbundle:prod --no-select

      - name: Build iOS Dev
        if: matrix.os == 'self-hosted' && matrix.flavor == 'dev'
        run: melos run build:ios:no-codesign:dev --no-select

      - name: Build iOS Prod
        if: matrix.os == 'self-hosted' && matrix.flavor == 'prod'
        run: melos run build:ios:no-codesign:prod --no-select
